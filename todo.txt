DONE list of hardcoded positions and sizes into rom
DONE pass to gamedata
DONE rom version detection 
DONE struct with pointers/arrays to resources 
DONE extract font from rom
DONE extract strings from rom
DONE extract sprites from rom

DONE extract title screen room data from rom
DONE extract shape draw data from rom

DONE draw title screen

DONE load room drawning commands for each room
DONE test each room and fix bugs

DONE DONE draw to offscreen "clean" buffer
DONE drawText function
DONE draw text for title screen
DONE handle drops

DONE add initial keyboard support for joystick controls
DONE add room type

DONE rework resources so that they're indexable by room number

DONE handle input

DONE change room

DONE draw screen transition

KINDA try to fix weird forward declration of Room and GameData structs

DONE draw treasures

DONE draw current player text
DONE draw chamber number
DONE timers
DONE draw current timer

DONE draw score in game screen

DONE draw score in title screen
DONE draw high score in title screen

DONE draw ball
    draw ball on bit pixels
    
DONE generate the offset sprites    
    
DONE bird
DONE add timer trigger
DONE draw lives correctly
DONE make ball ignore non-floors and walls, like vines


DONE player
DONE running
DONE jumping
DONE floor collision
DONE wall collision
DONE climbing

DONE collision detection treasures
DONE scoring of points

DONE get room door data
DONE draw doors when picking up key

DONE picking up key somehow destroys pickups?

DONE rooms don't properly initialize drop count

DONE use door to go to next room

DONE draw doors when drawing room at room init

DONE face the correct way when entering a room

DONE pick a door when entering a room by hotkey

DONE regenerating

DONE collision detection enemies

DONE splat and pause
DONE respawning

DONE mid-air animation, fall

DONE death when falling from too high

DONE losing a life

DONE game over

DONE handle two players

DONE add "player get ready" screen

DONE collide with items, keys, and doors even in debug mode

DONE drops positions need to be tweaked on hard mode
    or the reverse in easy mode
   
DONE move drops to the left of the rope one pixel to the left
    
DONE make drops fall faster on title screen and get ready screen

DONE restarting the game from the title screen doesn't properly reset
     the player position

DONE maybe grabbing onto rope doesn't reset the safeToLand flag

DONE use hard mode door indexes after completing the game once

DONE entering last door needs to:
    increment completion count
    reset the treasures
    reset the keys
    use the hardmode keys

DONE joystick support

DONE erase rope on top of player when climbing

DONE hang on rope

DONE horizontal rope traversal

DONE sound
    which sounds?
        DONE jump
        DONE land from jump
        DONE splat
        DONE room wipe transition
        DONE item pickup
        
        Length: 0:26.650
        Sample rate: 44100
        Channels: 1
        Bits/sample: 8 (int)
        Total samples: 1,175,265
        Blockalign: 1
        Datablock start: 44
        
DONE implement sound playing

DOME implement discrete sounds
    Jump
    Land
    Splat
    Pickup
    Screen Transition
    
DONE implement looping sounds
    Run
    Climb up
    Climb down
    
DONE run sound needs to start sooner
DONE bug when going diagonally on rope    
DONE double check that drops don't kill player when wobbling
    
DONE filter system for graphics
DONE hotkey for toggle graphics mode (blue, orange, raw bits)

DONE full screen toggle
DONE resizable window

NAH report error through callback
DONE display dialog box if rom is missing

DONE split rooms file

DONE make drop manager run 3x instead of upping the framerate

NAH hires position variables
    use union instead of GET_HIGH_BYTE ? 

fix up player.c

code comment pass
code pretty pass

bouncing off walls isn't accurate
jump isn't accurate (too high?)
jump doesn't slow down horizontally

how to make a release?

0.8 alpha
0.9 beta
    beta testing
1.0 official release


beta testing
player replay system?

release

    release manifest
    
        downland.exe
        readme.txt
        sounds (*.wav)
        
    
    readme.txt
    
        explain how to run
        you will need a copy of Downland V1.1. 
        the game will load files with these names
            downland.bin
            downland.rom
            Downland V1.1 (1983) (26-3046) (Tandy) [a1].ccc
            
            
        place in the same folder as the .exe
        
        
        joystick support
            works with xbox controllers
            
            TODO
                test with PS5 controller
                
        controls
        
            Escape      Pause
            Space       Step Pause
            F1          Change video filter
            Alt+Enter   Toggle Fullscreen
            Alt+F4      Close
            
            Keyboard    Arrow keys for Movement
                        Left Shift/LeftCtrl/Z for jump
            
            Joystick    Dpad+Left Analog Stick Movement
                        A (Xbox controller) for jump
                        
                    
    
        Tools Used to make this
            visual studio for code dev
            ghidra for reverse engineering
            trs80gp for rom debugging
            graphics gale for frame analysis
            GarageBand for sound editing
            

Engine Architecture

    there is a separation between the core game and the platform-specific front end

    Game folder
        - core game files
        - renders to 1bpp framebuffer
        
        Code notes:
        
        Use of contants and unsigned variables
        
            with very few exceptions, all the variables are treated as signed, just like the original game
            constants are generally kept in hex, to map them easier to the original disassembly
            
        
    SDL app 
        - handles input
        - handles sound
        - takes the framebuffer and renders it using basic video filters
        
    Sounds
        - sound assets
        
    visualstudio2022
        - Windows specific code solution
        - uses Game core files
        - uses SDL 
    